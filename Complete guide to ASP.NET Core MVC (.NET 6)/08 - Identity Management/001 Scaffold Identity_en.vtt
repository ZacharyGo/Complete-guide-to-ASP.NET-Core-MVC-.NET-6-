WEBVTT

00:01.780 --> 00:08.890
When we hit the add to cart button, what we want to do is to save our shopping cart to database in

00:08.890 --> 00:15.110
order to save our shopping cart with a database, it required the product details like product I.D.

00:15.730 --> 00:17.350
then give it a quiet account.

00:17.770 --> 00:23.770
And on top of that, we need to somehow figure out what is the user that is adding to a shopping cart.

00:24.520 --> 00:30.550
So next time, when that user comes to view everything on the page, we can load the shopping cart again

00:30.550 --> 00:31.150
for them.

00:31.760 --> 00:38.020
Now that sounds perfect, but if you notice we have no way of knowing what is the current user in our

00:38.020 --> 00:38.650
website.

00:39.400 --> 00:45.730
Typically, in a website that is registration log in and all those functionalities to track the user

00:45.730 --> 00:47.830
details that has logged in.

00:48.610 --> 00:51.640
But we do not have any of those things implemented.

00:52.480 --> 00:59.590
And in order to implement all of that from scratch, that can be a big project by itself to get started

00:59.590 --> 01:01.720
with identity related items.

01:02.110 --> 01:06.940
Microsoft has a built in helper witness identity glass library.

01:07.870 --> 01:14.140
We can use them, and with that, we will get all the default functionalities plus more implemented

01:14.410 --> 01:16.000
using razor pages.

01:16.930 --> 01:24.040
Previously, identity was also available as an MVC project, but with the new changes, Microsoft had

01:24.040 --> 01:26.680
opted to use only razor pages.

01:27.400 --> 01:34.420
So that was the reason I had a small project with razor pages in the beginning of the course because

01:34.420 --> 01:41.230
I wanted you guys to understand how page handler and pages work and face their pages because we will

01:41.230 --> 01:46.540
have to work with Identity Class Library, which is a racer class library.

01:47.320 --> 01:52.540
But the main question is how can we add that racial class library in our project?

01:53.410 --> 01:58.240
Let me close all the gaps that are open here and go Solution Explorer.

01:59.200 --> 02:06.160
Everything is working as expected right now in order to scaffold identity, whether it have to do a

02:06.160 --> 02:07.900
few steps in that application.

02:08.740 --> 02:15.460
Right now, a scaffolding has some issues, but I believe they should be resolved pretty soon inside

02:15.460 --> 02:16.270
of that project.

02:16.540 --> 02:22.060
That's why I click here within select AD and we have new scaffolded item.

02:22.720 --> 02:29.980
We use this option to scaffold the MVC area, but if you hover on the left side, here we have identity.

02:30.730 --> 02:33.700
We want the scaffold identity in our project.

02:34.390 --> 02:40.660
You can see it at code required for using ASP dot net core identity in the application.

02:41.650 --> 02:46.420
So let's hit that button, and we will have to configure some options.

02:47.590 --> 02:53.800
When you add identity to any application, like log in registration functionality, then you need to

02:53.800 --> 02:56.110
create those database tables as well.

02:56.830 --> 03:02.830
This identity class library will create those tables for us and configure everything.

03:04.150 --> 03:10.060
So right now, the options that it is giving us is do you want to select a new layout page for identity?

03:10.450 --> 03:11.080
We do not.

03:11.320 --> 03:13.390
We want to use the existing layout.

03:13.630 --> 03:17.250
So we will keep that as empty in the list here.

03:17.260 --> 03:20.890
We have all the files that are available inside the identity.

03:21.580 --> 03:24.400
You can see we have log in page, log out page.

03:24.610 --> 03:28.330
We have registered page reset password and much more.

03:29.050 --> 03:35.590
If you want, you can override all of these files and then in your project you will be able to see all

03:35.590 --> 03:37.210
of those great features.

03:38.080 --> 03:40.840
But the main thing here is data context glass.

03:41.620 --> 03:47.950
Since we need to work with database to register logging and all the features, we need to access the

03:47.960 --> 03:49.060
deep context.

03:49.660 --> 03:54.610
If you click on the dropdown here, we do not see our deep context that was added.

03:55.480 --> 04:02.620
We do not want to create a new deep context because we already have a deep context inside the data access,

04:03.010 --> 04:05.340
which is application deep context.

04:06.310 --> 04:09.700
Now, why is this not available in the dropdown option?

04:10.570 --> 04:17.020
The reason behind that is it is implementing the deep context if you want that to be available in the

04:17.020 --> 04:17.620
dropdown.

04:17.950 --> 04:21.700
This will have to implement the identity deep context.

04:22.870 --> 04:27.130
This is the deep context that is needed for Identity Class Library.

04:27.820 --> 04:32.710
So if you press control that we do not see the option to install a new package.

04:33.370 --> 04:41.470
So let's go that data access, manage packages and the package that we are looking for is Microsoft.

04:41.470 --> 04:43.980
That has been at dark identity.

04:43.990 --> 04:50.200
That entity framework for so will select the version here and let's install that.

04:52.320 --> 04:58.590
Once that is installed, we can go back to the application context and the free press control attack.

04:58.980 --> 05:02.430
Now we have the using statement, once you add.

05:03.120 --> 05:09.060
Let's build our project and everything should work perfect with that change.

05:09.300 --> 05:11.610
Let's try to scaffold the identity.

05:15.270 --> 05:17.070
We will override all the files.

05:17.490 --> 05:22.920
Now we have application DP context that is available as that data context.

05:23.900 --> 05:28.190
With that, if they hit the ad button, you will see some added messages.

05:28.490 --> 05:29.360
Let me show it that.

05:30.490 --> 05:36.490
This should have been perfect right now, but there are some bugs which Microsoft is fixing to scaffold.

05:37.480 --> 05:44.320
Right now we see an edit here, which is the following package is not installed, but that is incorrect.

05:44.680 --> 05:51.400
If we go to our project here and if they examined dependences packages, you'll see that packages already

05:51.400 --> 05:52.000
installed.

05:52.870 --> 05:57.370
So what we have to do is we actually have to scaffold that one more time.

05:57.700 --> 05:59.680
The package is already installed.

06:01.530 --> 06:09.120
So let's override our science selectively by context and hit the ad button this time, we'll see a different

06:09.120 --> 06:10.950
error message with bootstrap.

06:12.370 --> 06:15.520
If you do not see that error message, then that's great news.

06:15.670 --> 06:17.860
Microsoft has fixed that issue.

06:18.340 --> 06:22.030
But if you do see that, then I've been showing you how to fix that.

06:24.120 --> 06:30.570
Great, you can see the specified bootstrap version is not valid for valid options are three, four

06:30.570 --> 06:31.110
and five.

06:31.920 --> 06:38.250
This is a little bit weird because we are not using the default bootstrap that is provided inside the

06:38.250 --> 06:40.470
W W W Root folder.

06:40.860 --> 06:42.750
We have lib and bootstrap.

06:44.280 --> 06:49.710
Since we are not using this, we can just remove this perfect.

06:49.950 --> 06:54.030
And now if you build the application, you will see some error message.

06:54.810 --> 07:01.140
That's because the scaffolding is not perfect right now, so that would have to go to program classes

07:01.530 --> 07:05.280
and it tries to add new entry in the deep context.

07:06.120 --> 07:12.030
That is not needed because we don't really have a deep context or application deep context.

07:12.600 --> 07:13.980
So that may remove that.

07:14.430 --> 07:15.990
And let's build our project.

07:18.610 --> 07:24.910
Compared to a successful after the small change, if you try to scaffold again, this time it should

07:24.910 --> 07:25.300
work.

07:26.530 --> 07:27.830
I know that is weird.

07:27.850 --> 07:29.800
It should have been a seamless process.

07:30.130 --> 07:34.180
But I have a feeling in future this will be fixed and updated.

07:35.780 --> 07:37.610
So let's do that one more time.

07:38.120 --> 07:41.360
And I believe there shouldn't be any more added messages.

07:43.260 --> 07:49.590
Once the scaffolding is done, we will have a new area created inside our AIDS folder.

07:51.870 --> 07:52.760
And perfect.

07:53.010 --> 07:53.670
Great news.

07:53.940 --> 08:01.380
The support for darknet core identity was added to that project, but once it had the identity, it

08:01.380 --> 08:05.190
will again and the connection string, which is super weird right now.

08:05.790 --> 08:09.780
So make sure to remove that again or else you will see the error message.

08:10.560 --> 08:12.990
Let's build our project and it should work.

08:14.990 --> 08:15.800
So perfect.

08:15.920 --> 08:16.880
That is great news.

08:17.660 --> 08:23.330
So let's take a look at what got added when we scaffolded identity in the next video.
