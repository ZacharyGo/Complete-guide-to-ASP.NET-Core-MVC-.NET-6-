WEBVTT

00:01.850 --> 00:06.380
Now we need to retrieve all the data and pass that to the view or display here.

00:07.070 --> 00:13.910
So think about what will be the model that will be required for this page without a required list of

00:13.910 --> 00:15.320
all of the shopping cart.

00:16.040 --> 00:21.980
But down the road, we could be adding more properties to this model, so it makes sense to create a

00:21.980 --> 00:24.770
separate view model for this particular page.

00:25.580 --> 00:33.380
That is why what they do is stop the application inside our models for the Labor to create a new model.

00:35.510 --> 00:38.720
I recall this shopping cart view model.

00:39.690 --> 00:47.860
With her make that a public clash and first property that we want is and innumerable off shopping cart,

00:48.790 --> 00:50.770
we can call that list card.

00:52.570 --> 00:58.240
That's one property right now, but we're going to be adding more properties in this view model down

00:58.240 --> 00:58.720
the road.

00:59.620 --> 01:05.350
So if you go to our card controller, we need to retrieve all of the shopping cart for that particular

01:05.350 --> 01:13.090
user and also on the authorized user are able to access the shopping card so we can have the authorized

01:13.090 --> 01:16.120
keyboard directly at the controller level.

01:16.840 --> 01:22.540
Now, if for some reason down the road, you have some action method that needs to be accessed by an

01:22.540 --> 01:23.740
unauthorized user.

01:24.160 --> 01:28.360
Then you can apply this individual tag to all of the action method.

01:28.810 --> 01:34.570
But if the whole controller is authorized, it is best to add authorized at the controller level.

01:35.290 --> 01:41.080
That is also an attribute here, which is allow anonymous that will make sure that this action method

01:41.290 --> 01:44.770
can be accessed by a user that are not authorized.

01:45.920 --> 01:51.000
But we want authorization at the controller level, so I will add that at top.

01:52.040 --> 01:54.470
Next, we need to retrieve the shopping cart.

01:54.800 --> 02:03.470
So I been it unit of work using dependency injection, so I had a unit of work using statements here

02:04.100 --> 02:07.520
inside constructor, so we would have kept the unit off work.

02:08.750 --> 02:13.070
And was it underscored unit of work is equal to unit of work?

02:13.850 --> 02:19.190
Next, we need property of a shopping cart to be a model that needs to be populated here.

02:19.940 --> 02:26.260
So rather than creating that property directly inside the action motor, we should do that at the controller's

02:26.270 --> 02:26.730
level.

02:27.050 --> 02:30.230
So this will the shopping cart be a model?

02:32.880 --> 02:38.230
And I call it the same shopping cart, a model inside index.

02:38.280 --> 02:45.870
We first need to find out the ID of the logged in user so that we get inside home controller using claimed

02:46.140 --> 02:51.420
we can copy those two lines based right here to first get the identity.

02:52.500 --> 02:59.280
Leave it at the U.S. statement, and then we need to populate our shopping cart view model here, we

02:59.280 --> 03:06.510
just have the list card, so it's a very tight unit of work, shopping cart and get all we want to get

03:06.510 --> 03:09.270
all of the items for that particular user.

03:09.960 --> 03:15.870
So basically, we want to add a condition here and based on that, we want to filter our records.

03:16.500 --> 03:20.780
But if we go to work, I posit we're here and we examined the get out.

03:21.150 --> 03:27.210
We only have to include properties if we examine what we have inside the first artifact.

03:27.540 --> 03:29.220
We have the fatal condition.

03:30.030 --> 03:34.560
So far, we did not face a situation where we had to filter the at all.

03:35.070 --> 03:41.310
But now we have a new requirement with the shopping cart because we only want to get all the shopping

03:41.310 --> 03:43.440
carts for a particular user.

03:44.250 --> 03:48.330
So people have the same condition that we have in first our default.

03:49.350 --> 03:50.640
To get out as well.

03:51.270 --> 03:59.070
So I better copy and paste the feature function and filter our quality before we include the properties.

04:00.250 --> 04:07.930
But they have to make the change in our policy interface where we have to act to function and perfect.

04:09.060 --> 04:12.270
So with this, we have improved asset positivity once again.

04:13.020 --> 04:14.490
Let me save all of this.

04:14.790 --> 04:16.560
Go back to our card controller.

04:16.950 --> 04:21.720
Now we've got all we can give a condition UCOS to application.

04:21.720 --> 04:29.850
User I.D. is equal equal to claimed value, and when we retrieve this, it makes sense to populate the

04:29.850 --> 04:35.220
navigation property of product because we want to display all the product details.

04:35.880 --> 04:40.940
So inside Cat, ah, we also have enclosed properties with a colon.

04:41.190 --> 04:42.480
We have a safe product.

04:42.960 --> 04:46.920
And you know, that case is sensitive when it comes to include properties.

04:47.460 --> 04:53.190
If you have any questions here, you can just go to us advised that we read, Do we have to include

04:53.190 --> 04:56.400
properties here and try that on application?

04:56.410 --> 04:58.500
Keep context right here.

04:58.530 --> 05:04.200
We want to retrieve the shopping cart and the navigation property that we have as product.

05:04.980 --> 05:06.540
So that is what you should use.

05:07.680 --> 05:09.060
Let me comment it again.

05:09.450 --> 05:17.010
Go back here and the shopping cart view model is loaded so that look, pass this shopping cart view

05:17.010 --> 05:20.190
model to our view and then the next video.

05:20.370 --> 05:22.470
Let's modify index for you.
