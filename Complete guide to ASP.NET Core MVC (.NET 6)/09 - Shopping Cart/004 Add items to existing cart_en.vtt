WEBVTT

00:01.800 --> 00:07.410
Now that we are adding items to our shopping cart, what should happen if we go back to that database

00:07.620 --> 00:14.790
and if we add two or more accounts for the same item, we already have the product 85, we have the

00:14.790 --> 00:15.660
count of five.

00:16.380 --> 00:22.110
So if we are adding more items for the same user, we do not want a new entry in our table.

00:22.710 --> 00:29.310
We want to retrieve the existing entry and just modify the count by appending what we selected in the

00:29.310 --> 00:30.330
text box here.

00:31.380 --> 00:33.240
So let's implement that logic.

00:33.780 --> 00:40.950
Let me switch back to the cold here and inside details after we populate the application user, let's

00:40.950 --> 00:43.410
first get the shopping cart from databases.

00:43.860 --> 00:51.660
So a shopping cart cart is equal to underscore unit of work, start shopping cart that can call that

00:51.660 --> 00:56.790
cart from deep, and we want to load the shopping cart from database.

00:57.030 --> 00:59.010
We have to get first our default.

00:59.850 --> 01:04.310
So what will be the condition based on which we want to retrieve with it?

01:04.320 --> 01:12.210
Say that the application user I.D. should be equal to the claimed value, and on top of that, we need

01:12.210 --> 01:15.030
to find out the red card for that particular product.

01:15.360 --> 01:22.050
So if it's a see you, that product ID is equal equal to a shopping cart, that product ID.

01:22.770 --> 01:29.340
Based on that, we've retrieved the record and then we have to check if card from DPI is null or not.

01:30.030 --> 01:36.900
If card from TV is no, that means no records exist in the database for that user and that product.

01:37.530 --> 01:44.310
So we will add a record in that case as we will have to implement something to update the account shopping

01:44.310 --> 01:44.730
cart.

01:45.740 --> 01:51.320
I can do that directly here, because the shopping cart that we retrieved is being tracked, but that

01:51.320 --> 01:52.550
is not a good approach.

01:52.940 --> 01:54.820
And I have an extra bracket here.

01:54.830 --> 01:56.990
Let me remove that a fact.

01:57.650 --> 02:02.840
What we should do is add a method to update count inside the shopping cart repository.

02:03.860 --> 02:09.290
So let's go back there and open up the repository for shopping cart.

02:10.820 --> 02:17.450
We can implement door methods here, one to increment the count and one to take them into account when

02:17.460 --> 02:23.630
they pass the shopping cart here and the count by which we want to increment or decrement record.

02:24.760 --> 02:30.550
Let's go to our repository implementation here, and let's implement that interface.

02:33.320 --> 02:38.330
The logic is pretty simple if they have to decrement, we will see a minus equal to account.

02:38.810 --> 02:45.930
And if you want and we can return back to find out if it have the same logic when we are incrementing.

02:46.850 --> 02:51.260
So at that time, it will be classic will do and we can return back to count.

02:52.160 --> 02:56.150
We have returning the count back, but it is not required to use that.

02:56.450 --> 02:58.010
We know we always have that.

02:59.030 --> 03:04.550
So let's not close that up on certain ways and here we will say you cannot afford that shopping cart

03:05.060 --> 03:07.010
that we have to implement count.

03:07.490 --> 03:13.780
So in the first parameter here, we need to pass the shopping cart from database so we can pass from

03:13.790 --> 03:14.360
DPI.

03:14.960 --> 03:19.550
And what we want to increment that by is the shopping cart don't count.

03:20.300 --> 03:24.110
So once we update our shopping cart, we need to save the changes.

03:24.410 --> 03:25.520
That is perfect.

03:26.330 --> 03:31.670
Let's run the application at a breakpoint again and see that in action.

03:32.570 --> 03:35.960
If we go to our database, we have product 85.

03:36.590 --> 03:40.010
This is the one that increment the count by three.

03:40.310 --> 03:45.800
Add to cart and we are redirected to some very page, which is account clerk.

03:46.550 --> 03:49.580
I believe I know the reason we are not signed in.

03:50.210 --> 03:54.920
So let me sign in again to the same user and try that one more time.

03:55.580 --> 03:58.370
We will come back to that error in the future radio.

03:58.380 --> 04:00.610
So do not worry right now.

04:00.650 --> 04:04.070
Make sure you are signed in and then you give it one more try.

04:05.240 --> 04:06.800
We hit that break point here.

04:06.980 --> 04:11.630
This time, the card from deep should not be now, so it will go to the expert.

04:11.990 --> 04:14.930
We want to implement the existing count by three.

04:15.650 --> 04:16.520
Let's see that.

04:16.520 --> 04:17.750
Yep, that looks good.

04:18.770 --> 04:20.150
Let's see if that changes.

04:20.960 --> 04:23.870
Let's go to our database and perfect.

04:24.170 --> 04:27.980
The count is eight now, so that is working as expected.

04:28.700 --> 04:31.640
So our shopping cart is working as expected.

04:32.300 --> 04:34.460
Let's continue in the next video.
